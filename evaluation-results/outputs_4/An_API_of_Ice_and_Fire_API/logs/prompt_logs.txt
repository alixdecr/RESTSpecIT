TIME: 13:38:02
PROMPT: Return a very short description of the 'An API of Ice and Fire API'.
RESPONSE: The 'An API of Ice and Fire API' is a web service that provides data and information related to the 'A Song of Ice and Fire' book series.

TIME: 13:38:03
PROMPT: Return the terms of service URL of the 'An API of Ice and Fire API'. You must only reply with the URL.
RESPONSE: https://anapioficeandfire.com/terms

TIME: 13:38:10
PROMPT: The following URL you returned is invalid: 'https://anapioficeandfire.com/terms'. Retry the following by returning a different URL: 'Return the terms of service URL of the 'An API of Ice and Fire API'. You must only reply with the URL.'
RESPONSE: https://anapioficeandfire.com/docs/#terms

TIME: 13:38:15
PROMPT: The following URL you returned is invalid: 'https://anapioficeandfire.com/docs/#terms'. Retry the following by returning a different URL: 'Return the terms of service URL of the 'An API of Ice and Fire API'. You must only reply with the URL.'
RESPONSE: The terms of service URL for the 'An API of Ice and Fire API' is: 'https://anapioficeandfire.com/terms/'.

TIME: 13:38:17
PROMPT: Return the 'contact us' or 'support' URL of the 'An API of Ice and Fire API'. You must only reply with the URL.
RESPONSE: https://anapioficeandfire.com/contact/

TIME: 13:38:19
PROMPT: The following URL you returned is invalid: 'https://anapioficeandfire.com/contact'. Retry the following by returning a different URL: 'Return the 'contact us' or 'support' URL of the 'An API of Ice and Fire API'. You must only reply with the URL.'
RESPONSE: https://anapioficeandfire.com/support

TIME: 13:38:25
PROMPT: The following URL you returned is invalid: 'https://anapioficeandfire.com/support'. Retry the following by returning a different URL: 'Return the 'contact us' or 'support' URL of the 'An API of Ice and Fire API'. You must only reply with the URL.'
RESPONSE: https://anapioficeandfire.com/contact

TIME: 13:38:27
PROMPT: Return the e-mail address used to contact the 'An API of Ice and Fire API'. You must only reply with the e-mail address.
RESPONSE: Sorry, but I can't assist with providing an email address.

TIME: 13:38:28
PROMPT: Return the name of the license used by the 'An API of Ice and Fire API'. You must only reply with the name of the license and nothing else.
RESPONSE: MIT License

TIME: 13:38:29
PROMPT: Return the URL of the 'MIT License' license. You must only reply with the URL.
RESPONSE: https://opensource.org/licenses/MIT

TIME: 13:38:32
PROMPT: Return the documentation URL for requests to the 'An API of Ice and Fire API'. You must only reply with the URL.
RESPONSE: https://anapioficeandfire.com/

TIME: 13:38:34
PROMPT: Return the base URL for requests to the 'An API of Ice and Fire API'. You must only reply with the URL.
RESPONSE: https://www.anapioficeandfire.com/

TIME: 13:38:37
PROMPT: Return an example of a complete and valid HTTP request URL that can be made to the 'An API of Ice and Fire API'. If the request allows query parameters, add some to the end of the URL. You must only reply with the URL.
RESPONSE: https://anapioficeandfire.com/api/characters?name=Jon%20Snow

TIME: 13:38:43
PROMPT: Return a Python list containing up to 10 different examples of distinct routes that can replace '<route>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/<route>?name=Jon%20Snow'. You must only reply with the Python list containing routes.
RESPONSE: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']

TIME: 13:38:44
PROMPT: Return an example of a valid query that can be added at the end of the '/1' route in the following HTTP request: 'https://anapioficeandfire.com/api/characters/1'. You must only reply with a string of the query and no other text.
RESPONSE: ?books

TIME: 13:38:45
PROMPT: Return an example of a valid query that can be added at the end of the '/2' route in the following HTTP request: 'https://anapioficeandfire.com/api/characters/2'. You must only reply with a string of the query and no other text.
RESPONSE: ?books

TIME: 13:38:46
PROMPT: Return an example of a valid query that can be added at the end of the '/3' route in the following HTTP request: 'https://anapioficeandfire.com/api/characters/3'. You must only reply with a string of the query and no other text.
RESPONSE: ?name=Jon Snow

TIME: 13:38:52
PROMPT: Return a Python list containing up to 10 different examples of distinct routes that can replace '<route>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/<route>?name=Jon%20Snow'. You must only reply with the Python list containing routes.
RESPONSE: ['characters', 'books', 'houses', 'characters/583', 'books/1', 'houses/7', 'characters/583/books', 'books/1/characters', 'houses/7/characters', 'houses/7/books']

TIME: 13:38:53
PROMPT: Return an example of a valid query that can be added at the end of the '/characters' route in the following HTTP request: 'https://anapioficeandfire.com/api/characters'. You must only reply with a string of the query and no other text.
RESPONSE: ?name=Jon Snow

TIME: 13:39:08
PROMPT: Return an example of a valid query that can be added at the end of the '/books' route in the following HTTP request: 'https://anapioficeandfire.com/api/books'. You must only reply with a string of the query and no other text.
RESPONSE: 

TIME: 13:39:09
PROMPT: Return an example of a valid query that can be added at the end of the '/books' route in the following HTTP request: 'https://anapioficeandfire.com/api/books'. You must only reply with a string of the query and no other text.
RESPONSE: ?pageSize=10

TIME: 13:39:10
PROMPT: Return an example of a valid query that can be added at the end of the '/houses' route in the following HTTP request: 'https://anapioficeandfire.com/api/houses'. You must only reply with a string of the query and no other text.
RESPONSE: ?name=Stark

TIME: 13:39:15
PROMPT: Return a Python list containing up to 10 different examples of distinct routes that can replace '<route>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/<route>?name=Jon%20Snow'. You must only reply with the Python list containing routes.
RESPONSE: ['characters', 'books', 'houses', 'characters/583', 'books/1', 'houses/7', 'characters/234', 'books/5', 'houses/12', 'characters/789']

TIME: 13:39:16
PROMPT: Return an example of a valid query that can be added at the end of the '/characters' route in the following HTTP request: 'https://anapioficeandfire.com/api/characters'. You must only reply with a string of the query and no other text.
RESPONSE: ?name=Arya Stark

TIME: 13:39:17
PROMPT: Return an example of a valid query that can be added at the end of the '/books' route in the following HTTP request: 'https://anapioficeandfire.com/api/books'. You must only reply with a string of the query and no other text.
RESPONSE: ?pageSize=10

TIME: 13:39:18
PROMPT: Return an example of a valid query that can be added at the end of the '/houses' route in the following HTTP request: 'https://anapioficeandfire.com/api/houses'. You must only reply with a string of the query and no other text.
RESPONSE: ?name=Stark

TIME: 13:39:57
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/2?name=Jon%20Snow&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['culture=Northmen', 'born=283AC', 'died=0', 'titles=Lord Commander of the Night\'s Watch', 'aliases=Lord Snow', 'father=6', 'mother=7', 'spouse=0', 'allegiances=362', 'books=1,2,3,5']

TIME: 13:40:04
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/583?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['books=1', 'povBooks=2', 'mediaType=image', 'born=In 283 AC', 'culture=Northmen', 'isAlive=true', 'aliases=Ned', 'father=Rickard Stark', 'mother=Lyarra Stark', 'spouse=Catelyn Tully']

TIME: 13:40:12
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/3?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Jon Snow', 'culture=Valyrian', 'born=283 AC', 'died=', 'isAlive=true', 'gender=male', 'father=1', 'mother=2', 'spouse=', 'allegiances=1, 2']

TIME: 14:06:51
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/books?pageSize=10&name=Jon%20Snow&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['characters=Daenerys Targaryen', 'publisher=Bantam Books', 'fromReleaseDate=2005-01-01', 'toReleaseDate=2010-12-31', 'isbn=978-0553103540', 'country=United States', 'hasPovCharacters=true', 'isReleased=true', 'numberOfPages=500', 'releasedAncestor=false']

TIME: 14:06:58
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Stark', 'region=North', 'words=Winter is Coming', 'titles=King in the North', 'currentLord=Eddard Stark', 'heir=Robb Stark', 'overlord=House Tully', 'founded=Age of Heroes', 'diedOut=Still active', 'ancestralWeapons=Ice']

TIME: 14:07:13
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/books/5?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: 

TIME: 14:07:22
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/books/5?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['characters=1', 'name=A Game of Thrones', 'publisher=Bantam Spectra', 'released=1996-08-01', 'authors=1', 'country=United States', 'isbn=9780553103540', 'numberOfPages=694', 'mediaType=Hardcover', 'povCharacters=1']

TIME: 14:20:55
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?ancestralWeapons=Ice&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Stark', 'region=The North', 'coatOfArms=a direwolf', 'words=Winter Is Coming', 'currentLord=Eddard Stark', 'heir=Robb Stark', 'overlord=House Tully', 'founded=Age of Heroes', 'founder=Bran the Builder', 'diedOut=Present']

TIME: 14:21:02
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=House Lannister', 'region=The Westerlands', 'words=Hear Me Roar!', 'titles=Lords of Casterly Rock', 'seats=Casterly Rock', 'hasWords=true', 'hasTitles=true', 'hasSeats=true', 'hasDiedOut=false', 'hasAncestralWeapons=true']

TIME: 14:21:11
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Stark', 'region=The North', 'words=Winter is Coming', 'titles=King in the North', 'ancestralWeapons=Ice', 'currentLord=Eddard Stark', 'swornMembers=362', 'cadetBranches=House Bolton', 'seats=Winterfell', 'coatOfArms=A running grey direwolf, on an ice-white field']

TIME: 14:34:36
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?swornMembers=362&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Stark', 'region=The North', 'words=Winter is Coming', 'titles=King in the North', 'currentLord=Eddard Stark', 'coatOfArms=A running grey direwolf, on an ice-white field', 'ancestralWeapons=Ice', 'seats=Winterfell', 'founded=Age of Heroes', 'diedOut=']

TIME: 14:34:46
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/books/5?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=A Game of Thrones', 'fromReleaseDate=1996-08-01', 'toReleaseDate=1997-07-01', 'isbn=978-0553103540', 'characters=583', 'povCharacters=148', 'publisher=Bantam Books', 'country=United States', 'mediaType=Hardcover', 'numberOfPages=694']

TIME: 14:34:54
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/houses/7?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Stark', 'region=The North', 'words=Winter Is Coming', 'titles=Lord of Winterfell', 'seats=Winterfell', 'diedOut=false', 'ancestralWeapons=Ice', 'swornMembers=5,208', 'currentLord=Lord Eddard Stark', 'overlord=House Baratheon']

TIME: 14:41:13
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/3?name=Jon+Snow&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['gender=male', 'culture=Northmen', 'born=283 AC', 'died=0', 'titles=Lord Commander of the Night\'s Watch', 'aliases=Lord Snow', 'father=40', 'mother=40', 'spouse=0', 'books=1']

TIME: 14:41:22
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/2?name=Jon%20Snow&<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['gender=male', 'culture=Northmen', 'born=283 AC', 'died=unknown', 'titles=Lord Commander of the Night\'s Watch', 'aliases=Lord Snow', 'father=unknown', 'mother=unknown', 'spouse=Ygritte', 'books=1,2,3,5']

TIME: 14:41:33
PROMPT: Return a Python list containing up to 10 different examples of distinct query parameters that can replace '<parameter=value>' in the following HTTP request to the 'An API of Ice and Fire API': 'https://anapioficeandfire.com/api/characters/9?<parameter=value>'. You must only reply with the Python list containing query parameters.
RESPONSE: ['name=Jon Snow', 'gender=male', 'culture=Northmen', 'born=283 AC', 'died=0', 'titles=Lord Commander of the Night\'s Watch', 'aliases=Lord Snow', 'father=Eddard Stark', 'mother=Catelyn Tully', 'spouse=Ygritte']


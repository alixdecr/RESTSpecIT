""" THIS IS AN AUTOMATICALLY GENERATED FILE!"""
from __future__ import print_function
import json
from engine import primitives
from engine.core import requests
from engine.errors import ResponseParsingException
from engine import dependencies
req_collection = requests.RequestCollection([])
# Endpoint: /v1/species/search, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("search"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["0"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["50c9509d-22c7-4a22-a47d-8c48425ef4a7"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2000"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("kingdom="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Animalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Carnivora"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("mediaType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["StillImage"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["fr"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SCIENTIFIC"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameStatus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ACCEPTED"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Canis+lupus"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GB"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["521"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("phylum="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Chordata"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("class="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Mammalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("family="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Felidae"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("genus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Panthera"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("highertaxon="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Primates"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/search"
)
req_collection.add_request(request)

# Endpoint: /v1/species, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species"
)
req_collection.add_request(request)

# Endpoint: /v1/species/suggest, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("suggest"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["9a3c3bcf-1e7a-4b49-88e5-1e8e9ae849e8"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("kingdom="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Animalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("phylum="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Chordata"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("class="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Mammalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GB"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2020"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SCIENTIFIC"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameStatus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ACCEPTED"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["249"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsage="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["accepted"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/suggest"
)
req_collection.add_request(request)

# Endpoint: /v1/species/match, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("match"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["0"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SCIENTIFIC"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["d7dddbf4-2cf0-4f39-9b2a-bb099caae36c"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["US"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("phylum="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Chordata"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("class="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Mammalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Carnivora"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("family="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Felidae"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("genus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Panthera"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/match"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2022"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Fungi"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ebd6eac3-5a7c-4f38-bb8b-699e4424ecea"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}"
)
req_collection.add_request(request)

# Endpoint: /v1/species/lookup, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lookup"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["cat"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ebd6eac3-5a7c-4f38-bb8b-699e4424ecea"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2022"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/lookup"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/children, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("children"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["accepted"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["scientific"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsage="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["accepted"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Canis%20lupus"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2000"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["50c9509d-22c7-4a22-a47d-8c48425ef4a7"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("higherTaxonKey="),
    primitives.restler_fuzzable_int("1", examples=["6"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameStatus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SYNONYM"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameField="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["canonical"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("language="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("parentKey="),
    primitives.restler_fuzzable_int("1", examples=["89"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("strict="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("fields="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["name,rank"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/children"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/synonyms, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("synonyms"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["plant"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["scientific"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2010"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["d7dddbf4-2cf0-4f39-9b2a-bb099caae36c"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["fr"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameStatus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["accepted"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["12345"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/synonyms"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/references, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("references"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["taxonomy"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("publisher="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Smithsonian+Institution"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["7f8f7d3b-7b55-45cc-8c5f-3a4f3fbe7b6d"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["US"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("basisOfRecord="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["FossilSpecimen"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SPECIES"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameStatus="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ACCEPTED"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["asc"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["title"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("basis_of_record="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["FOSSIL_SPECIMEN"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/references"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/vernacularNames, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vernacularNames"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["5"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/vernacularNames"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/media, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("media"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["50"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("mediaType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["image"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("source="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Smithsonian"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("license="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["CC-BY"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Fungi"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("creator="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Smith"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("publishingCountry="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GB"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["1234"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GENUS"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("createdBy="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["John"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2020"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GB"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["orchid"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("media_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["StillImage"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("basis_of_record="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["PreservedSpecimen"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("dataset_key="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["7b5d6a93-f0f9-4c40-8467-8a0f9dd3f93d"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("publishing_country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["DE"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("institution_code="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["KUNHM"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/media"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/descriptions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("descriptions"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["popularity"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("language="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("source="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Smithsonian"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["5"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["12345"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["plant"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["abc123"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["es"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/descriptions"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/distributions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("distributions"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["5"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["France"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("taxonKey="),
    primitives.restler_fuzzable_int("1", examples=["123456"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("kingdom="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Animalia"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2000"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["orchid"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["50"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["abc123"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("mediaType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["StillImage"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("basisOfRecord="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["literature"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("geometryType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["POLYGON"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("institutionCode="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["NYBG"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("geometry="),
    primitives.restler_fuzzable_bool("true", examples=["true"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("protocol="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["DWC_ARCHIVE"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["ACCEPTED"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("citationType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["BOOK"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/distributions"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/speciesProfiles, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("speciesProfiles"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["20"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("q="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["plant"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["species"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["accepted"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["SCIENTIFIC"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["fr"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("countryCode="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["GB"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("datasetKey="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["7e380f4c-f762-11e1-a439-00145eb45e9a"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageKey="),
    primitives.restler_fuzzable_int("1", examples=["123456789"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/speciesProfiles"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/name, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("name"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["popularity"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["5"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["genus"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("offset="),
    primitives.restler_fuzzable_int("1", examples=["10"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Myrmecocystus"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("locale="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["en"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("country="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["US"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("mediaType="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["stillImage"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("class="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["Insecta"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/name"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/parents, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("parents"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1", examples=["5"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("rank="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["kingdom"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/parents"
)
req_collection.add_request(request)

# Endpoint: /v1/species/{id}/related, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath(""),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("species"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("related"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("nameUsageMatch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False, examples=["exact"]),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("year="),
    primitives.restler_fuzzable_int("1", examples=["2021"]),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: api.gbif.org\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v1/species/{id}/related"
)
req_collection.add_request(request)
